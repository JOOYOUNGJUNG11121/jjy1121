- **1. User 관련 API**
    - **1-1. User 생성**
        - **URL**: `api/signup`
        
        - **HTTP Method**: `POST`
        - **description**: 새로운 사용자를 등록합니다.
        - **Request Body**:
            
            ```json
            {
                "first_name": "John",
                "last_name": "Doe",
                "email": "johndoe@example.com",
                "password": "securepassword",
                "address": "123 Main Street",
                "contact": "123-456-7890",
                "gender": "MALE"
            }
            ```
            
        - **Response**:
            - **201 Created**: 회원가입 성공
                
                ```json
                {
                    "message": "User created successfully",
                    "user_id": 1
                }
                ```
                
            - **400 Bad Request**: 잘못된 요청 (필수 항목 누락)
                
                ```bash
                {
                    "error: "Missing required fields"
                }
                ```
                
    - **1-2. User 조회**
        - **URL:** `api/users/{id}`
        - **URL Parameters**
            - `id`: 사용자 ID
        - **HTTP Method**: `GET`
        - **description**: 특정 사용자의 정보를 조회합니다.
        - **Response**:
            - **200 OK**: 사용자 정보 조회 성공
            
            ```json
            {
                "id": 1,
                "first_name": "John",
                "last_name": "Doe",
                "email": "johndoe@example.com",
                "address": "123 Main Street",
                "contact": "123-456-7890",
                "gender": "MALE",
                "is_active": true
            }
            ```
            
            - **404 Not Found**: 사용자가 존재하지 않음
            
            ```json
            {
                "message": "User not found"
            }
            ```
            - **1-3. User 수정**
    - **URL:** `api/users/{id}`
    - **URL Parameters**
        - `id`: 사용자 ID
    - **HTTP Method**: `PUT`
    - **description**: 특정 사용자의 정보를 수정합니다.
    - **Response**:
        - **200 OK**: 사용자 정보 수정 성공
        
        ```json
        {
            "message": "User updated successfully",
            "user_id": 1
        }
        ```
        
        - **404 Not Found**: 사용자가 존재하지 않음
        
        ```json
        {
            "message": "User not found"
        }
        ```
        
- **1-4. User 삭제**
    - **URL:** `api/users/{id}`
    - **URL Parameters**
        - `id`: 사용자 ID
    - **HTTP Method**: **DELETE**
    - **description**: 특정 사용자를 삭제합니다.
    - **Response**:
        - **200 OK**: 사용자 정보 삭제 성공
        
        ```json
        {
            "message": "User deleted successfully"
        }
        ```
        
        - **404 Not Found**: 사용자가 존재하지 않음
        
        ```json
        {
            "message": "User not found"
        }
        ```
        

---

- **2. Store 관련 API**
    - **2-1. Store 등록**
        - **URL**: `api/stores`
        - **HTTP Method**: `POST`
        - **description**: 새로운 가게를 등록합니다.
        - **Request Body**:
            
            ```json
            {
                "name": "Coffee Shop",
                "address": "456 Elm Street",
                "contact": "987-654-3210"
            }
            ```
            
        - **Response**:
            - **201 Created**: 가게 생성 성공
                
                ```json
                {
                    "message": "Store created successfully",
                    "store_id": 1
                }
                ```
                
            - **400 Bad Request**: 잘못된 요청 (필수 항목 누락)
                
                ```json
                {
                    "message": "Name and address are required"
                }
                ```
                
    - **2-2. Store 조회**
        - **URL**: `api//stores/{id}`
        - **URL Parameters**
            - `id`: 가게 ID
        - **HTTP Method**: `GET`
        - **description**: 특정 가게의 정보를 조회합니다.
        - **Response**:
            - **200 OK**: 가게 정보 조회 성공
                
                ```json
                {
                    "id": 1,
                    "name": "Coffee Shop",
                    "address": "456 Elm Street",
                    "contact": "987-654-3210",
                    "is_active": true
                }
                ```
                
            - **404 Not Found**: 가게가 존재하지 않음
                
                ```json
                {
                    "message": "Store not found"
                }
                ```
                
        
    - **2-3. Store 수정**
        - **URL**: `api//stores/{id}`
        - **URL Parameters**
            - `id`: 가게 ID
        - **HTTP Method**: `PUT`
        - **description**: 특정 가게의 정보를 수정합니다.
        - **Request Body**:
            
            ```json
            {
                "name": "Coffee Shop",
                "address": "456 Elm Street",
                "contact": "987-654-3210"
            }
            ```
            
        - **Response**:
            - **200 OK**: 가게 정보 수정 성공
                
                ```json
                {
                    "message": "Store updated successfully",
                    "store_id": 1
                }
                ```
                
            - **404 Not Found**: 가게가 존재하지 않음
                
                ```json
                {
                    "message": "Store not found"
                }
                ```
                
    - **2-4. Store 삭제**
        - **URL**: `api//stores/{id}`
        - **URL Parameters**
            - `id`: 가게 ID
        - **HTTP Method**: `DELETE`
        - **description**: 특정 가게를 삭제합니다.
        - **Request Body**:
        - **Response**:
            - **200 OK**: 가게 삭제 성공
                
                ```json
                {
                    "message": "Store deleted successfully"
                }
                ```
                
            - **404 Not Found**: 가게가 존재하지 않음
                
                ```json
                {
                    "message": "Store not found"
                }
                ```
                

---

- **3. Employee 관련 API**
    - **3-1. Employee 생성**
        - **URL**: `api/employees`
        - **HTTP Method**: `POST`
        - **description**: 새로운 직원 등록합니다.
        - **Request Body**:
            
            ```json
            {
                "user_id": 1,
                "store_id": 1,
                "type": "STAFF"
            }
            ```
            
        - **Response**:
            - **201 Created**: 직원 등록 성공
                
                ```json
                {
                    "message": "Employee created successfully",
                    "employee_id": 1
                }
                ```
                
            - **400 Bad Request**: 잘못된 요청 (필수 항목 누락)
                
                ```json
                {
                    "message": "user_id, store_id, and type are required"
                }
                ```
                
    - **3-2. Employee 조회**
        - **URL**: `api//employees/{id}`
        - **URL Parameters**
            - `id`: 직원 ID
        - **HTTP Method**: `GET`
        - **description**: 특정 직원의 정보를 조회합니다.
        - **Response**:
            - **200 OK**: 직원 정보 조회 성공
                
                ```json
                {
                    "id": 1,
                    "code": 1,
                    "type": "STAFF",
                    "user_id": 1,
                    "store_id": 1,
                    "is_active": true
                }
                ```
                
            - **404 Not Found**: 직원이 존재하지 않음
                
                ```json
                {
                    "message": "Employee not found"
                }
                ```
                
        
    - **3-3. Employee 수정**
        - **URL**: `api//employees/{id}`
        - **URL Parameters**
            - `id`: 직원 ID
        - **HTTP Method**: `PUT`
        - **description**: 특정 직원의 정보를 수정합니다.
        - **Response**:
            - **200 OK**: 직원 수정 성공
                
                ```json
                {
                    "message": "Employee updated successfully",
                    "employee_id": 1
                }
                ```
                
            - **404 Not Found**: 직원이 존재하지 않음
                
                ```json
                {
                    "message": "Employee not found"
                }
                ```
                
    - **3-4. Employee 삭제**
        - **URL**: `api//employees/{id}`
        - **URL Parameters**
            - `id`: 직원 ID
        - **HTTP Method**: `DELETE`
        - **description**: 특정 직원을 삭제합니다.
        - **Response**:
            - **200 OK**: 직원 삭제 성공
                
                ```json
                {
                    "message": "Employee deleted successfully"
                }
                ```
                
            - **404 Not Found**: 직원이 존재하지 않음
    
    ```json
    {
        "message": "Employee not found"
    }
    ```